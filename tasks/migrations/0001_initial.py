# Generated by Django 5.1.6 on 2025-02-22 10:37

import django.db.models.deletion
import location_field.models.plain
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
        ('data', '0001_initial'),
        ('worker', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', location_field.models.plain.PlainLocationField(blank=True, max_length=63, null=True)),
                ('status', models.CharField(choices=[('in_progress', 'In progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('not_started', 'Not started'), ('awaiting_confirmation', 'Awaiting confirmation')], default='not_started', max_length=50)),
                ('expected_realization_duration', models.DurationField(blank=True, null=True)),
                ('expected_realization_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data.taskcategory')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_clients', to='client.client')),
                ('client_machines', models.ManyToManyField(blank=True, related_name='related_client_machines', to='client.clientmachine')),
                ('client_places', models.ManyToManyField(blank=True, related_name='related_client_places', to='client.clientplace')),
                ('tags', models.ManyToManyField(blank=True, to='data.tag')),
                ('workers', models.ManyToManyField(blank=True, to='worker.worker')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='task_attachments/')),
                ('image', models.ImageField(blank=True, null=True, upload_to='task_images/')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attachment_type', models.CharField(choices=[('image', 'Image'), ('file', 'File')], default='file', max_length=20)),
                ('custom_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tasks.task')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_attachments', to='worker.worker')),
            ],
            options={
                'verbose_name': 'Task Attachment',
                'verbose_name_plural': 'Task Attachments',
            },
        ),
        migrations.CreateModel(
            name='TaskNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='worker.worker')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='tasks.task')),
            ],
            options={
                'verbose_name': 'Task Note',
                'verbose_name_plural': 'Task Notes',
                'ordering': ['-created_at'],
            },
        ),
    ]
